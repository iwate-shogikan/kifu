#!/usr/bin/env bash
# pre-commit: kifu プロジェクト用（Windows安定版・未追跡を NUL 区切りで確実に追加）
# - 生成物再生成（kifu_list.json / index.html）
# - 追跡済みの変更/削除/移動: git add -u
# - ★ 未追跡: git ls-files -o -z を git add --pathspec-from-file=- --pathspec-file-nul へ直結
# - 何もステージされていなければ空コミット中止（デバッグ出力付き）

set -euo pipefail
echo "[pre-commit] start"

repo_root="$(git rev-parse --show-toplevel)"
cd "$repo_root"

# Python 実行ファイルを決定
if command -v python >/dev/null 2>&1; then
  PY=python
elif command -v python3 >/dev/null 2>&1; then
  PY=python3
else
  echo "[pre-commit] ERROR: python が見つかりません" >&2
  exit 2
fi

echo "[pre-commit] regenerate artifacts..."
"$PY" generate_kifu_list.py
"$PY" generate_index_with_search.py

# 追跡済みの変更/削除/移動をステージ
echo "[pre-commit] stage tracked changes (-u)"
git add -u

# ★ 未追跡ファイルを NUL 区切りで “確実に” 追加（.gitignore は尊重）
#   update-index より安全で、日本語名も確実に扱える
echo "[pre-commit] stage untracked via git add (nul-delimited)"
git ls-files -o --exclude-standard -z \
  | git add --pathspec-from-file=- --pathspec-file-nul

# 生成物の差分があれば保険でステージ
if ! git diff --quiet -- data/kifu_list.json 2>/dev/null; then
  git add -- data/kifu_list.json || true
fi
if ! git diff --quiet -- index.html 2>/dev/null; then
  git add -- index.html || true
fi

# デバッグ：いまステージされている一覧を表示
echo "[pre-commit] staged now:"
git diff --cached --name-status || true

# 空コミット防止
if git diff --cached --quiet; then
  echo "[pre-commit] No staged changes. Abort commit." >&2
  exit 1
fi

echo "[pre-commit] done."
